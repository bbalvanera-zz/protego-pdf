ng-container([formGroup]="form")
  .input-group.input-group-sm.mb-1.password-field(
      appPasswordStrengthMeter,
      appFocusWithin,
      [ngClass]="{'is-invalid': form.password.invalid && form.password.dirty}"
    )
    input.form-control.password-input(
      [type]="form.passwordVisible ? 'text' : 'password'",
      i18n-placeholder="password input|Conveys that this input is to enter the password to open the document after locking it"
      placeholder="Password to open the document",
      formControlName="password"
    )
    .input-group-append
      .btn-group.btn-group-toggle
        label.btn.btn-sm
          input(type="checkbox", formControlName="passwordVisible", #passwordVisible, (change)="togglePasswordVisibility(passwordVisible.checked)")
          //- need to use a div here since `i` tag gets replaced by `svg` tag
          div(*ngIf="form.passwordVisible", title="Hide password", i18n-title="hide password|Tooltip indicating that this button hides the password")
            i.fas.fa-eye-slash
          div(*ngIf="!form.passwordVisible", title="Show password", i18n-title="show password|Tooltip indicating that this button shows the password")
            i.fas.fa-eye
      div.input-group-text.password-strength(title="Password strength meter", i18n-title="password strength|Tooltip indicating password strength meter")
        ng-container([ngSwitch]="form.passwordStrength")
          ng-container(*ngSwitchCase="-1", i18n="default strength|When no strength is measured") Strength
          ng-container(*ngSwitchCase="2", i18n="medium strength|When the password is of medium strength") Medium
          ng-container(*ngSwitchCase="3", i18n="good strength|When password's strength is good") Good
          ng-container(*ngSwitchCase="4", i18n="strong password|When the password is strong") Strong
          //- covers case 0 and 1 which are weak
          ng-container(*ngSwitchDefault, i18n="weak password|When the password's strength is weak") Weak
  .invalid-feedback.pl-2.mb-2(
    *ngIf="form.password.errors?.required && form.password.dirty",
    i18n="password required msg|Lets the user know the field is required@@pwdRequiredMessage"
  ) Please specify a password
  .invalid-feedback.pl-2.mb-2(
    *ngIf="form.password.errors?.maxlength && form.password.dirty",
    i18n="password max length|Lets the user know that the password should be less than 32 chars@@pwdMaxLength"
  ) Please specify a password of no more than 32 chars.
  input.password-input.form-control.form-control-sm(
    type="password",
    i18n-placeholder="password confirm input|Conveys that this input is to enter the password a second time for confirmation"
    placeholder="Repeat password",
    formControlName="passwordConfirm",
    [ngClass]="{'is-invalid': form.errors?.mismatch}"
  )
  .invalid-feedback.pl-2(
    *ngIf="form.errors?.mismatch",
    i18n="password mismatch msg|Lets the user know that passwords don't match") Passwords do not match
